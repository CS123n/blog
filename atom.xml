<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://blog.liulp.club/atom.xml" rel="self"/>
  
  <link href="https://blog.liulp.club/"/>
  <updated>2022-04-02T11:15:36.432Z</updated>
  <id>https://blog.liulp.club/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>自然语言处理</title>
    <link href="https://blog.liulp.club/2021/12/nlp_python/"/>
    <id>https://blog.liulp.club/2021/12/nlp_python/</id>
    <published>2021-12-01T16:17:27.000Z</published>
    <updated>2022-04-02T11:15:36.432Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><ul><li><p>特高频特低频词都不能用于分析语言风格</p></li><li><p>高频长词，连词搭配可以分析风格</p></li><li><p>语言理解技术：词义消歧，指代消歧</p></li><li><p>语言理解应用：机器翻译（MT），含义识别（RTE）</p></li><li><p>nltk.Text():</p><table><thead><tr><th align="center">方法</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">Text(words)</td><td align="center">对象构造</td></tr><tr><td align="center">concordance(word, width=79, lines=25)</td><td align="center">显示word出现的上下文</td></tr><tr><td align="center">common_contexts(words)</td><td align="center">显示words出现的相同模式</td></tr><tr><td align="center">similar(word)</td><td align="center">显示word的相似词</td></tr><tr><td align="center">collocations(num=20, window_size=2)</td><td align="center">显示最常见的二词搭配</td></tr><tr><td align="center">count(word)</td><td align="center">word出现的词数</td></tr><tr><td align="center">dispersion_plot(words)</td><td align="center">绘制words中文档中出现的位置图</td></tr><tr><td align="center">vocab()</td><td align="center">返回文章去重的词典</td></tr></tbody></table></li><li><p>GB2312，Latin-2，UTF-8是对应Unicode的一部分</p></li><li><p>正则匹配：<br>^ 匹配开始，$ 匹配结尾，? 前方可选，. 匹配任意1个，+ 前方一个或多个，* 前方零个或多个，{m,n} 至少重复m次不多于n次  </p><table><thead><tr><th align="center">操作符</th><th align="center">行为</th></tr></thead><tbody><tr><td align="center">[abc]</td><td align="center">匹配字符集合</td></tr><tr><td align="center">ed|ing</td><td align="center">匹配指定的字符串（析取）</td></tr><tr><td align="center">a(b|c)+</td><td align="center">括号表示操作符的范围</td></tr></tbody></table></li><li><p>辅音元音序列，从中可以看出s和t后元音的分布几乎是互补的：  </p><table><thead><tr><th align="center"></th><th align="center">a</th><th align="center">e</th><th align="center">i</th><th align="center">o</th><th align="center">u</th></tr></thead><tbody><tr><td align="center">s</td><td align="center">0</td><td align="center">0</td><td align="center">100</td><td align="center">2</td><td align="center">1</td></tr><tr><td align="center">t</td><td align="center">47</td><td align="center">8</td><td align="center">0</td><td align="center">148</td><td align="center">37</td></tr></tbody></table></li><li><p>词干提取：lying -&gt; lie （会产生非词）；词形归并：women -&gt; woman；非标准词：数字、缩写、日期</p></li><li><p>正则简写：[a-zA-Z0-9_] = \w、[ \t\n] = \s</p></li></ul><h2 id="词性标注"><a href="#词性标注" class="headerlink" title="词性标注"></a>词性标注</h2><ul><li>词性标记集：adj，adv，cnj连词，det限定词 ……</li><li>使用out of vocabulary (UNK)替换超出词汇</li><li>简单词性标注：默认标注 &lt;- 正则标注 &lt;- 查询标注</li><li>一个语料库出现的新词大多数是名词，且一个语料库中最多的往往也是名词，所以一般将名词作为默认值</li><li>频率标注：1-gram unigram、2-gram bigram、3-gram trigram，n-gram标注器中n大于3时，面临数据稀疏问题</li><li>为了防止多词查询跨句，在句子开始处加None</li><li>标注策略失败要回退上级策略，直至默认标注</li><li>给定当前单词及其前两个标记，在约5%的情况中，有一个以上的标记分配给当前词</li><li>修正标注（Brill）：基于规则不断修正</li><li>语言学家使用形态学、句法和语义线索确定一个词的类别</li></ul><h2 id="文本分类"><a href="#文本分类" class="headerlink" title="文本分类"></a>文本分类</h2><ul><li>训练数据分为：train、dev-test、test三部分</li><li>最大熵马尔可夫模型和线性链条件随机场模型</li><li>任务：姓名性别识别，对话行为分类，句子分割，文本蕴含判断</li><li>精确度= true &amp; positive / positive，召回率 = true &amp; positive / true</li><li>交叉验证：将原始语料分为N个子集（folds）。对于每一个折叠，我们使用除这个折叠中的数据外所有数据来训练模型，然后在这个折叠上测试模型</li><li>决策树：<ul><li>信息增益：得到某个信息后熵的减少</li><li>底层节点样本太少：设置停止阈值 or 对低性能节点进行裁剪</li><li>特征按照顺序处理，难以处理相互独立多特征的情况</li></ul></li><li>朴素贝叶斯：<ul><li>假设：特征相互独立</li><li>零计数和平滑：对于未出现、低频率的分类进行平滑，提升重要性</li></ul></li><li>最大熵分类：<ul><li>假设：满足所有约束条件，分布越平均熵越大越好</li></ul></li></ul><h2 id="信息提取"><a href="#信息提取" class="headerlink" title="信息提取"></a>信息提取</h2><ul><li>名词短语分块（NP-chunking）：<ul><li>可选的跟着任意数目形容词（JJ）的限定词（DT）和名词（NN）组成</li><li>IOB标记：I（inside），O（outside）或Ｂ（begin）</li></ul></li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://pic.imgdb.cn/item/62481d1127f86abb2ad06a26.png"                                     ></p><ul><li>VP分块，如has already delivered；PP分块，如because of</li><li>命名实体识别：组织，人，地点，日期，货币，设施，地缘政治实体</li><li>有了明确的命名实体就可以进行关系抽取</li></ul><h2 id="句子结构"><a href="#句子结构" class="headerlink" title="句子结构"></a>句子结构</h2><ul><li>歧义句子：While hunting in Africa, <strong>I shot an elephant in my pajamas.</strong> How an elephant got into my pajamas I’ll never know.</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://pic.imgdb.cn/item/62481d1c27f86abb2ad07e87.png"                                     ></p><ul><li>and不能连接NP和AP，e.g., It is the worst part and clumsy looking.</li><li>解析器：下降递归分析、移进-归约分析、左角落分析（带自下而上过滤的自上而下的方法）、图表分析（动态规划）</li><li>左角落分析：</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://pic.imgdb.cn/item/62481d2827f86abb2ad092ad.png"                                     ></p><ul><li>图表分析（动态规划）：    <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; tokens = <span class="string">&quot;I shot an elephant in my pajamas&quot;</span>.split()</span><br><span class="line">&gt;&gt; wfst0 = init_wfst(tokens, groucho_grammar)</span><br><span class="line">&gt;&gt; wfst1 = complete_wfst(wfst0, tokens, groucho_grammar)</span><br><span class="line">&gt;&gt; display(wfst1, tokens)</span><br><span class="line">WFST  <span class="number">1</span>   <span class="number">2</span>     <span class="number">3</span>　   <span class="number">4</span>　   <span class="number">5</span>　   <span class="number">6</span>　   <span class="number">7</span></span><br><span class="line"><span class="number">0</span>　  NP   .　   .　   S　   .　   .　   S</span><br><span class="line"><span class="number">1</span>　   .   V　   .　  VP　   .　   .　  VP</span><br><span class="line"><span class="number">2</span>　   .   .   Det　  NP　   .　   .　   .</span><br><span class="line"><span class="number">3</span>　   .   .　   .　   N　   .　   .　   .</span><br><span class="line"><span class="number">4</span>　   .   .　   .　   .　   P　   .　  PP</span><br><span class="line"><span class="number">5</span>　   .   .　   .　   .　   .　 Det　  NP</span><br><span class="line"><span class="number">6</span>　   .   .　   .　   .　   .　   .　   N</span><br></pre></td></tr></table></figure></li><li>依存关系的表示：(shot I (elephant an (in (pajamas my))))、(shot I (elephant an) (in (pajamas my)))  </li><li>动词及物or不及物称为动词的配价  </li><li>随着句子的增长，歧义是爆炸式增长的。因此需要加权文法，即为每一个分叉分配概率，且加和为1  </li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基础知识&quot;&gt;&lt;a href=&quot;#基础知识&quot; class=&quot;headerlink&quot; title=&quot;基础知识&quot;&gt;&lt;/a&gt;基础知识&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;特高频特低频词都不能用于分析语言风格&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;高频长词，连词搭配可以分析风格&lt;/</summary>
      
    
    
    
    <category term="学习" scheme="https://blog.liulp.club/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="NLP" scheme="https://blog.liulp.club/categories/%E5%AD%A6%E4%B9%A0/NLP/"/>
    
    
    <category term="机器学习" scheme="https://blog.liulp.club/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="NLP" scheme="https://blog.liulp.club/tags/NLP/"/>
    
  </entry>
  
  <entry>
    <title>Homeassistant</title>
    <link href="https://blog.liulp.club/2021/08/homeassistant/"/>
    <id>https://blog.liulp.club/2021/08/homeassistant/</id>
    <published>2021-08-11T16:17:27.000Z</published>
    <updated>2022-04-02T11:15:34.718Z</updated>
    
    <content type="html"><![CDATA[<p>在Openwrt上搭建Homeassistant，目标是实现低成本可扩展的智能家居系统。</p><h2 id="安装Hacs"><a href="#安装Hacs" class="headerlink" title="安装Hacs"></a>安装Hacs</h2><p>因为Homeassistant的集成是需要审核通过的，很多开源的集成是没有加入的。所以推荐安装<code>Hacs</code>，它拥有更大的集成市场。官方推荐的安装方法是直接进入容器，运行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -q -O - https://install.hacs.xyz | bash -</span><br></pre></td></tr></table></figure><p>但是我的docker内的网络并不能正确访问外网。通过分析代码发现，可以直接在Homeassistant的外部目录下运行脚本安装，从而不需要进入容器。其中，需要添加Homeassistant的目录到脚本的目录声明中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">declare</span> -a paths=(<span class="string">&quot;/root/homeassistant/config&quot;</span>)</span><br></pre></td></tr></table></figure><p>我的是/root/homeassistant/config。设置好后直接运行脚本。重启Homeassistant之后，就可以在集成中搜索到<code>Hacs</code>了。这里需要注意的是，它自带的Github api有次数限制，建议直接在configuration.yaml中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hacs:</span><br><span class="line">    token: 自己申请的Github token</span><br></pre></td></tr></table></figure><p>就可以避开这一限制了。</p><ul><li><a class="link"   href="https://hacs.xyz/" >Hacs<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://github.com/settings/tokens" >Github token<i class="fas fa-external-link-alt"></i></a></li></ul><h3 id="彩云天气"><a href="#彩云天气" class="headerlink" title="彩云天气"></a>彩云天气</h3><p>我使用<code>Hacs</code>添加了彩云天气的集成，彩云天气的api我早有申请，这次就直接用上了。彩云天气可以方便地根据经纬度坐标添加多地的天气预报，很符合我这种异地上学的人的需求。</p><ul><li><a class="link"   href="https://dashboard.caiyunapp.com/user/sign_in/" >彩云天气<i class="fas fa-external-link-alt"></i></a></li></ul><h3 id="小米云服务"><a href="#小米云服务" class="headerlink" title="小米云服务"></a>小米云服务</h3><p>在<code>Hacs</code>的集成中，我还找到了一个有意思的小米云服务，小米手机开启手机找回功能后，就可以通过集成这个服务，来定位手机，可以说非常的方便，也免去了很多Homeassistant实现相同功能需要的权限申请。</p><h3 id="百度地图"><a href="#百度地图" class="headerlink" title="百度地图"></a>百度地图</h3><p>虽然Homeassistant自带了地图组件，但是在国内地图信息实在是令人不敢恭维。所以，有人设计了使用百度地图替代官方地图的集成，这一集成我并没有在<code>Hacs</code>中找到，建议直接从Github上下载安装到custom_components目录下。</p><ul><li><a class="link"   href="https://github.com/shaonianzhentan/ha_baidu_map" >ha_baidu_map<i class="fas fa-external-link-alt"></i></a></li></ul><h2 id="添加MQTT"><a href="#添加MQTT" class="headerlink" title="添加MQTT"></a>添加MQTT</h2><p>通过之前已经通过docker安装了MQTT服务器，我们直接在Homeassistant集成中添加MQTT服务，并输入对应的ip地址和端口，因为是内网服务，所以我就没有设置账户密码，直接留空。</p><h2 id="编写Nodemcu程序"><a href="#编写Nodemcu程序" class="headerlink" title="编写Nodemcu程序"></a>编写Nodemcu程序</h2><p>有了MQTT服务以后，就可以通过MQTT添加Nodemcu等esp8266开发板，实现低成本的智能家居方案。</p><h3 id="温湿度计"><a href="#温湿度计" class="headerlink" title="温湿度计"></a>温湿度计</h3><p>我首先在一个Nodemcu开发板上连上了一个SHTC3温湿度传感器，效果如下。然后编写了代码，烧录入Nodemcu，完整代码见附录<a href="#%E6%B8%A9%E6%B9%BF%E5%BA%A6%E8%AE%A1%E4%BB%A3%E7%A0%81">1</a>。</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://pic.imgdb.cn/item/62481dd527f86abb2ad1df14.png"                                     ></p><h3 id="红外遥控"><a href="#红外遥控" class="headerlink" title="红外遥控"></a>红外遥控</h3><p>另外，通过非常好用的<code>IRremoteESP8266</code>这个库，我们可以方便地配置发射红外信号。</p><ol><li>通过对MQTT信号的读取和处理，实现了远程红外遥控器。具体涉及到信号的读取，将byte转化为string。</li><li>红外信号的发射，通过<code>IRremoteESP8266</code>发射对应的红外信号，我家用的是格力的空调，对应可以使用<code>ir_Kelvinator</code>库。</li></ol><p>完整代码见附录<a href="#%E6%A0%BC%E5%8A%9B%E9%81%A5%E6%8E%A7%E5%99%A8%E4%BB%A3%E7%A0%81">2</a>。</p><h2 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h2><p>Homeassistant支持添加路由器监控，对于我使用的Openwrt的路由器，可以在路由器上安装luci-mod-rpc。然后在configuration.yaml添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">device_tracker:</span><br><span class="line">    - platform: luci</span><br><span class="line">        host: 172.17.0.1</span><br><span class="line">        username: </span><br><span class="line">        password: </span><br></pre></td></tr></table></figure><p>重启Homeassistant就可以看到路由器上的设备了。还可以通过配置known_devices.yaml文件，为对应的设备添加设备名称等等。</p><h2 id="Lovelace"><a href="#Lovelace" class="headerlink" title="Lovelace"></a>Lovelace</h2><p><code>Hacs</code>不仅仅有丰富的集成，还提供了很多好卡的ui元素，我比较喜欢一款叫clear的主题。启用<code>Hacs</code>中的主题需要在configuration.yaml添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">frontend:</span><br><span class="line">    themes: !include_dir_merge_named themes</span><br></pre></td></tr></table></figure><p>另外，还可以通过 左边栏姓名 $\to$ 排序和隐藏侧边栏中的项目 来重新排列或隐藏左边栏的项目。</p><p>当当当当，最终的完整效果如下</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://pic.imgdb.cn/item/62481df927f86abb2ad22e8d.jpg"                                     ></p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="温湿度计代码"><a href="#温湿度计代码" class="headerlink" title="温湿度计代码"></a>温湿度计代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;SparkFun_SHTC3.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;EspMQTTClient.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_HONG 13</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN_WEN 9</span></span><br><span class="line"></span><br><span class="line"><span class="function">EspMQTTClient <span class="title">client</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  <span class="string">&quot;RM2100&quot;</span>,          <span class="comment">// wifi名</span></span></span></span><br><span class="line"><span class="params"><span class="function">  <span class="string">&quot;&quot;</span>,                <span class="comment">// wifi密码</span></span></span></span><br><span class="line"><span class="params"><span class="function">  <span class="string">&quot;192.168.2.110&quot;</span>,   <span class="comment">// MQTT Broker server ip</span></span></span></span><br><span class="line"><span class="params"><span class="function">  <span class="string">&quot;&quot;</span>,                <span class="comment">// MQTT账户名</span></span></span></span><br><span class="line"><span class="params"><span class="function">  <span class="string">&quot;&quot;</span>,                <span class="comment">// MQTT密码</span></span></span></span><br><span class="line"><span class="params"><span class="function">  <span class="string">&quot;mqtt01-aweoif&quot;</span>,   <span class="comment">// 设备自定义名</span></span></span></span><br><span class="line"><span class="params"><span class="function">  <span class="number">1883</span>               <span class="comment">// MQTT端口</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br><span class="line"></span><br><span class="line">SHTC3 mySHTC3;</span><br><span class="line"><span class="type">float</span> RH,T;</span><br><span class="line"><span class="type">char</span> temp[<span class="number">128</span>] = <span class="string">&quot;empty&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// put your setup code here, to run once:</span></span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">115200</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span>(Serial == <span class="literal">false</span>)&#123;<span class="built_in">delay</span>(<span class="number">500</span>);&#125;;</span><br><span class="line">  </span><br><span class="line">  mySHTC3.<span class="built_in">begin</span>();</span><br><span class="line">  <span class="built_in">pinMode</span>(LED_BUILTIN, OUTPUT);</span><br><span class="line">  <span class="built_in">digitalWrite</span>(LED_BUILTIN, HIGH);</span><br><span class="line"></span><br><span class="line">  client.<span class="built_in">enableDebuggingMessages</span>(); <span class="comment">// Enable debugging messages sent to serial output</span></span><br><span class="line">  client.<span class="built_in">enableHTTPWebUpdater</span>(); <span class="comment">// Enable the web updater. User and password default to values of MQTTUsername and MQTTPassword. These can be overrited with enableHTTPWebUpdater(&quot;user&quot;, &quot;password&quot;).</span></span><br><span class="line">  client.<span class="built_in">enableLastWillMessage</span>(<span class="string">&quot;TestClient/lastwill&quot;</span>, <span class="string">&quot;I am going offline&quot;</span>);  <span class="comment">// You can activate the retain flag by setting the third parameter to true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  client.<span class="built_in">loop</span>();</span><br><span class="line"><span class="comment">//  温湿度传感器</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">millis</span>()%<span class="number">20000</span> &lt;= <span class="number">5</span>)&#123;</span><br><span class="line">    SHTC3_Status_TypeDef result = mySHTC3.<span class="built_in">update</span>();</span><br><span class="line">    <span class="keyword">if</span>(mySHTC3.lastStatus == SHTC3_Status_Nominal)   <span class="comment">//判断SHTC3状态</span></span><br><span class="line">    &#123;</span><br><span class="line">      RH = mySHTC3.<span class="built_in">toPercent</span>();   <span class="comment">//读取湿度数据                       </span></span><br><span class="line">      T = mySHTC3.<span class="built_in">toDegC</span>();       <span class="comment">//读取温度数据   </span></span><br><span class="line">      Serial.<span class="built_in">print</span>(RH);</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">      Serial.<span class="built_in">println</span>(T);      </span><br><span class="line">      <span class="built_in">snprintf</span>(temp,<span class="number">11</span>,<span class="string">&quot;%.1f&quot;</span>,T);</span><br><span class="line">      client.<span class="built_in">publish</span>(<span class="string">&quot;esp8266/temp&quot;</span>,temp);</span><br><span class="line">      <span class="built_in">snprintf</span>(temp,<span class="number">11</span>,<span class="string">&quot;%.1f&quot;</span>,RH);</span><br><span class="line">      client.<span class="built_in">publish</span>(<span class="string">&quot;esp8266/hum&quot;</span>,temp);           </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      Serial.<span class="built_in">println</span>(<span class="string">&quot;Update failed!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="格力遥控器代码"><a href="#格力遥控器代码" class="headerlink" title="格力遥控器代码"></a>格力遥控器代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;IRremoteESP8266.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;IRsend.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ir_Kelvinator.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;PubSubClient.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">uint16_t</span> kIrLed = <span class="number">15</span>;  <span class="comment">// ESP8266 GPIO pin to use. Recommended: 4 (D2).</span></span><br><span class="line"><span class="function">IRKelvinatorAC <span class="title">ac</span><span class="params">(kIrLed)</span></span>;  <span class="comment">// Set the GPIO to be used for sending messages.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// WiFi</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *ssid = <span class="string">&quot;&quot;</span>;      <span class="comment">// Enter your WiFi name</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *password = <span class="string">&quot;&quot;</span>;  <span class="comment">// Enter WiFi password</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// MQTT Broker</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *mqtt_broker = <span class="string">&quot;192.168.2.110&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *mqtt_username = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *mqtt_password = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* client_id = <span class="string">&quot;clientId-gfdsgr&quot;</span>;  </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mqtt_port = <span class="number">1883</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *topic0 = <span class="string">&quot;esp8266/setopen&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *topic1 = <span class="string">&quot;esp8266/setmod&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *topic2 = <span class="string">&quot;esp8266/settemp&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *topic3 = <span class="string">&quot;esp8266/setfan&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *topic4 = <span class="string">&quot;esp8266/setvert&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *topic5 = <span class="string">&quot;esp8266/sethori&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> setopen[<span class="number">128</span>] = <span class="string">&quot;on&quot;</span>;</span><br><span class="line"><span class="type">uint8_t</span> setmod = kKelvinatorCool;</span><br><span class="line"><span class="type">int</span> settemp = <span class="number">26</span>;</span><br><span class="line"><span class="type">int</span> setfan = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">WiFiClient espClient;</span><br><span class="line"><span class="function">PubSubClient <span class="title">client</span><span class="params">(espClient)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">115200</span>);</span><br><span class="line">  ac.<span class="built_in">begin</span>();</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  </span><br><span class="line">  WiFi.<span class="built_in">begin</span>(ssid, password);</span><br><span class="line">  <span class="keyword">while</span> (WiFi.<span class="built_in">status</span>() != WL_CONNECTED) &#123;</span><br><span class="line">      <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">      Serial.<span class="built_in">println</span>(<span class="string">&quot;Connecting to WiFi..&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;Connected to the WiFi network&quot;</span>);</span><br><span class="line">  <span class="comment">//connecting to a mqtt broker</span></span><br><span class="line">  client.<span class="built_in">setServer</span>(mqtt_broker, mqtt_port);</span><br><span class="line">  client.<span class="built_in">setCallback</span>(callback);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Set up what we want to send. See ir_Kelvinator.cpp for all the options.</span></span><br><span class="line">  <span class="comment">// Most things default to off.</span></span><br><span class="line">  ac.<span class="built_in">off</span>();</span><br><span class="line">  ac.<span class="built_in">setFan</span>(setfan);</span><br><span class="line">  ac.<span class="built_in">setMode</span>(kKelvinatorCool);</span><br><span class="line">  ac.<span class="built_in">setTemp</span>(settemp);</span><br><span class="line">  ac.<span class="built_in">setSwingVertical</span>(<span class="literal">true</span>);</span><br><span class="line">  ac.<span class="built_in">setSwingHorizontal</span>(<span class="literal">true</span>);</span><br><span class="line">  <span class="built_in">printState</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">callback</span><span class="params">(<span class="type">char</span>* topic, byte* payload, <span class="type">unsigned</span> <span class="type">int</span> length)</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">  Serial.<span class="built_in">print</span>(<span class="string">&quot;Message arrived in topic: &quot;</span>);</span><br><span class="line">  Serial.<span class="built_in">println</span>(topic);</span><br><span class="line"> </span><br><span class="line">  Serial.<span class="built_in">print</span>(<span class="string">&quot;Message:&quot;</span>);</span><br><span class="line"><span class="comment">//  for (int i = 0; i &lt; length; i++) &#123;</span></span><br><span class="line"><span class="comment">//    Serial.print((char)payload[i]);</span></span><br><span class="line"><span class="comment">//  &#125;</span></span><br><span class="line">  <span class="type">char</span> *message = (<span class="type">char</span>*)payload;</span><br><span class="line">  <span class="keyword">if</span> (length &gt; <span class="number">3</span>) &#123;</span><br><span class="line">    length = <span class="number">3</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="type">char</span> dest[length] = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="built_in">strncpy</span>(dest, message, length);</span><br><span class="line">  Serial.<span class="built_in">println</span>(dest);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">strcmp</span>(topic, topic3) == <span class="number">0</span>)&#123;</span><br><span class="line">    setfan = <span class="built_in">atoi</span>(dest);</span><br><span class="line">    ac.<span class="built_in">setFan</span>(setfan);</span><br><span class="line">    <span class="built_in">printState</span>();</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(topic, topic2) == <span class="number">0</span>) &#123;</span><br><span class="line">    settemp = <span class="built_in">atoi</span>(dest);</span><br><span class="line">    ac.<span class="built_in">setTemp</span>(settemp);</span><br><span class="line">    <span class="built_in">printState</span>();</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(topic, topic1) == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dest, <span class="string">&quot;hea&quot;</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">      ac.<span class="built_in">setMode</span>(kKelvinatorHeat);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dest, <span class="string">&quot;coo&quot;</span>)==<span class="number">0</span>) &#123;</span><br><span class="line">      ac.<span class="built_in">setMode</span>(kKelvinatorCool);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dest, <span class="string">&quot;dry&quot;</span>)==<span class="number">0</span>) &#123;</span><br><span class="line">      ac.<span class="built_in">setMode</span>(kKelvinatorDry);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dest, <span class="string">&quot;aut&quot;</span>)==<span class="number">0</span>) &#123;</span><br><span class="line">      ac.<span class="built_in">setMode</span>(kKelvinatorAuto);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printState</span>();</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(topic, topic0) == <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dest, <span class="string">&quot;on&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">      ac.<span class="built_in">on</span>();</span><br><span class="line">      flag = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dest, <span class="string">&quot;off&quot;</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">      ac.<span class="built_in">off</span>();</span><br><span class="line">      flag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="built_in">printState</span>();</span><br><span class="line">      ac.<span class="built_in">send</span>();</span><br><span class="line">      <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">      ac.<span class="built_in">send</span>();</span><br><span class="line">      <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">      ac.<span class="built_in">send</span>();</span><br><span class="line">      <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">      ac.<span class="built_in">send</span>();</span><br><span class="line">      <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">      ac.<span class="built_in">send</span>();</span><br><span class="line">      ac.<span class="built_in">off</span>();</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(topic, topic4) == <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dest, <span class="string">&quot;on&quot;</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">      ac.<span class="built_in">setSwingVertical</span>(<span class="literal">true</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dest, <span class="string">&quot;off&quot;</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">      ac.<span class="built_in">setSwingVertical</span>(<span class="literal">false</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(topic, topic5) == <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dest, <span class="string">&quot;on&quot;</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">      ac.<span class="built_in">setSwingHorizontal</span>(<span class="literal">true</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dest, <span class="string">&quot;off&quot;</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">      ac.<span class="built_in">setSwingHorizontal</span>(<span class="literal">false</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">reconnect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (!client.<span class="built_in">connected</span>()) &#123;</span><br><span class="line">    Serial.<span class="built_in">print</span>(<span class="string">&quot;Attempting MQTT connection...&quot;</span>);</span><br><span class="line">    <span class="comment">// Attempt to connect</span></span><br><span class="line">    <span class="keyword">if</span> (client.<span class="built_in">connect</span>(client_id, mqtt_username, mqtt_password)) &#123;</span><br><span class="line">      Serial.<span class="built_in">println</span>(<span class="string">&quot;connected&quot;</span>);</span><br><span class="line">      <span class="comment">// 连接成功时订阅主题</span></span><br><span class="line">      client.<span class="built_in">subscribe</span>(topic0);</span><br><span class="line">      client.<span class="built_in">subscribe</span>(topic1);</span><br><span class="line">      client.<span class="built_in">subscribe</span>(topic2);</span><br><span class="line">      client.<span class="built_in">subscribe</span>(topic3);</span><br><span class="line">      client.<span class="built_in">subscribe</span>(topic4);</span><br><span class="line">      client.<span class="built_in">subscribe</span>(topic5);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      Serial.<span class="built_in">print</span>(<span class="string">&quot;failed, rc=&quot;</span>);</span><br><span class="line">      Serial.<span class="built_in">print</span>(client.<span class="built_in">state</span>());</span><br><span class="line">      Serial.<span class="built_in">println</span>(<span class="string">&quot; try again in 5 seconds&quot;</span>);</span><br><span class="line">      <span class="comment">// Wait 5 seconds before retrying</span></span><br><span class="line">      <span class="built_in">delay</span>(<span class="number">5000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printState</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Display the settings.</span></span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;Kelvinator A/C remote is in the following state:&quot;</span>);</span><br><span class="line">  Serial.<span class="built_in">printf</span>(<span class="string">&quot;  %s\n&quot;</span>, ac.<span class="built_in">toString</span>().<span class="built_in">c_str</span>());</span><br><span class="line">  <span class="comment">// Display the encoded IR sequence.</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span>* ir_code = ac.<span class="built_in">getRaw</span>();</span><br><span class="line">  Serial.<span class="built_in">print</span>(<span class="string">&quot;IR Code: 0x&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">uint8_t</span> i = <span class="number">0</span>; i &lt; kKelvinatorStateLength; i++)</span><br><span class="line">    Serial.<span class="built_in">printf</span>(<span class="string">&quot;%02X&quot;</span>, ir_code[i]);</span><br><span class="line">  Serial.<span class="built_in">println</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!client.<span class="built_in">connected</span>()) &#123;</span><br><span class="line">    <span class="built_in">reconnect</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  client.<span class="built_in">loop</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在Openwrt上搭建Homeassistant，目标是实现低成本可扩展的智能家居系统。&lt;/p&gt;
&lt;h2 id=&quot;安装Hacs&quot;&gt;&lt;a href=&quot;#安装Hacs&quot; class=&quot;headerlink&quot; title=&quot;安装Hacs&quot;&gt;&lt;/a&gt;安装Hacs&lt;/h2&gt;&lt;p&gt;因为</summary>
      
    
    
    
    <category term="极客" scheme="https://blog.liulp.club/categories/%E6%9E%81%E5%AE%A2/"/>
    
    <category term="服务器" scheme="https://blog.liulp.club/categories/%E6%9E%81%E5%AE%A2/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="homeassistant" scheme="https://blog.liulp.club/tags/homeassistant/"/>
    
    <category term="智能家居" scheme="https://blog.liulp.club/tags/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85/"/>
    
  </entry>
  
  <entry>
    <title>Docker配置</title>
    <link href="https://blog.liulp.club/2021/08/docker/"/>
    <id>https://blog.liulp.club/2021/08/docker/</id>
    <published>2021-08-01T16:17:27.000Z</published>
    <updated>2022-04-02T11:14:16.134Z</updated>
    
    <content type="html"><![CDATA[<p>Openwrt中有使用docker的需求，顺道学习一下docker的配置。</p><h2 id="空间挂载"><a href="#空间挂载" class="headerlink" title="空间挂载"></a>空间挂载</h2><p>openwrt默认是/opt和/overlay共用空间，因为文件格式等问题，docker在这种情况下只能使用vfs储存模式，占用空间大且速度慢。为此，在openwrt中分别为overlay和docker的opt分别分配空间并格式化为ext4格式，然后把/overlay和/opt分别挂载在上面，这样docker就会自动使用更好更快的overlay2储存模式。</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://pic.imgdb.cn/item/62481d8e27f86abb2ad15124.png"                                     ></p><p>另外，我还将一块移动硬盘挂载在/mnt/share，而且将它通过<code>Samba</code>进行网络共享，共享下局域网传文件速度还是很可观的。</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://pic.imgdb.cn/item/62481da727f86abb2ad18298.png"                                     ></p><h2 id="Homeassistant"><a href="#Homeassistant" class="headerlink" title="Homeassistant"></a>Homeassistant</h2><p>首先是使用docker在openwrt中安装<code>Homeassistant</code>，这样就可以本地搭建智能家居服务器。<code>Homeassistant</code>使用<code>MQTT</code>协议的通信服务，所以还搭建了一个基于<code>MQTT</code>的开源服务器<code>Eclipse Mosquitto</code>的docker。</p><ul><li><a class="link"   href="https://www.home-assistant.io/" >Homeassistant<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://zh.wikipedia.org/wiki/MQTT" >MQTT<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://mosquitto.org/" >Eclipse Mosquitto<i class="fas fa-external-link-alt"></i></a></li></ul><h3 id="MQTT"><a href="#MQTT" class="headerlink" title="MQTT"></a>MQTT</h3><p>首先设置配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /mosquitto/config</span><br><span class="line"><span class="built_in">mkdir</span> -p /mosquitto/data</span><br><span class="line"><span class="built_in">mkdir</span> -p /mosquitto/log</span><br><span class="line">nano /mosquitto/config/mosquitto.conf</span><br></pre></td></tr></table></figure><p>并在mosquitto.conf中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">persistence true</span><br><span class="line">persistence_location /mosquitto/data</span><br><span class="line">log_dest file /mosquitto/log/mosquitto.log</span><br></pre></td></tr></table></figure><p>如果需要使用密码，因为我只在局域网提供服务，就没有添加用户名密码。在mosquitto.conf中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">allow_anonymous false</span><br><span class="line">password_file /mosquitto/pwfile</span><br></pre></td></tr></table></figure><p>然后在容器启动后运行命令，添加用户admin以及密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_passwd -c /mosquitto/pwfile admin</span><br></pre></td></tr></table></figure><p>并授予目录权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> -R 755 /mosquitto</span><br><span class="line">chmode -R 777 /mosquitto/log</span><br></pre></td></tr></table></figure><p>完成以上准备后，启动容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name=<span class="string">&quot;mosquitto&quot;</span> --net=host \</span><br><span class="line">    -v /mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf \</span><br><span class="line">    -v /mosquitto/data:/mosquitto/data \</span><br><span class="line">    -v /mosquitto/log:/mosquitto/log \</span><br><span class="line">    eclipse-mosquitto:1.6.14</span><br></pre></td></tr></table></figure><p>要注意的是，一是最新版本的Eclipse Mosquitto 2无法被正常访问，所以建议使用1.6.14版本。二是在openwrt中的桥接模式，端口映射后被其他终端直接访问有问题，建议直接使用host模式，共享网络。</p><h3 id="Homeassistant-1"><a href="#Homeassistant-1" class="headerlink" title="Homeassistant"></a>Homeassistant</h3><p>接下来运行Homeassistant</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name=<span class="string">&quot;home-assistants&quot;</span> -p 8123:8123 \</span><br><span class="line">    -v /root/homeassistant/config:/config \</span><br><span class="line">    -v /mnt/share:/mnt/share \</span><br><span class="line">    homeassistant/home-assistant</span><br></pre></td></tr></table></figure><p>除了将配置文件进行映射，我还将我的分享目录进行了映射，这样就可以通过<code>Homeassistant</code>直接访问分享目录下的影视资源。</p><h2 id="Nginx-PHP"><a href="#Nginx-PHP" class="headerlink" title="Nginx+PHP"></a>Nginx+PHP</h2><p>为了为局域网添加Speedtest。刚开始打算直接添加Speedtest的docker，可惜出现了架构不兼容的问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WARNING: The requested image&#x27;s platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested</span><br></pre></td></tr></table></figure><p>为此，我决定曲线救国，使用docker搭建web服务器。开始打算使用集成好的docker镜像，最后还是决定使用docker-compose的方案。分别安装nginx和php的官方docker镜像，这两个镜像都没有架构兼容性问题。</p><p>首先安装php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name=<span class="string">&quot;web-php&quot;</span> -p 9000:9000 \</span><br><span class="line">    -v /root/nginx/webroot:/usr/share/nginx/html \</span><br><span class="line">    php:7.2-fpm</span><br></pre></td></tr></table></figure><p>其次添加nginx的配置文件conf.d</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    listen [::]:80 default_server;</span><br><span class="line">    server_name localhost;</span><br><span class="line"></span><br><span class="line">    index index.php index.html;</span><br><span class="line">    error_log  /var/log/nginx/error.log;</span><br><span class="line">    access_log /var/log/nginx/access.log;</span><br><span class="line">    root /var/www/html;</span><br><span class="line"></span><br><span class="line">    set $virtualdir &quot;&quot;;</span><br><span class="line">    set $realdir &quot;&quot;;</span><br><span class="line"></span><br><span class="line">    if ($request_uri ~ ^/([^/]*)/.*$ ) &#123;</span><br><span class="line">        set $virtualdir /$1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (-d &quot;$document_root$virtualdir&quot;) &#123;</span><br><span class="line">        set $realdir &quot;$&#123;virtualdir&#125;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        try_files $uri $uri/ $realdir/index.php?$args;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        try_files $uri =404;</span><br><span class="line">        fastcgi_split_path_info ^(.+\.php)(/.+)$;</span><br><span class="line">        fastcgi_pass 192.168.2.110:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">        fastcgi_param PATH_INFO $fastcgi_path_info;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，文件路径为/root/nginx/webroot。并且将</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastcgi_pass 192.168.2.110:9000;</span><br></pre></td></tr></table></figure><p>中的地址修改为php的运行位置。建议不要用桥接的地址，因为我发现每次重启后，桥接地址是可能发生变换的，建议端口映射后，直接使用局域网地址。</p><p>然后运行nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name=<span class="string">&quot;web-nginx&quot;</span> -p 8088:80 \</span><br><span class="line">    -v /root/nginx/conf.d:/etc/nginx/conf.d</span><br><span class="line">    -v /root/nginx/webroot:/usr/share/nginx/html</span><br><span class="line">    nginx:latest</span><br></pre></td></tr></table></figure><p>有个问题是，8080端口不能正常使用，建议使用自定义端口，譬如我用的8088端口。</p><h3 id="Speedtest"><a href="#Speedtest" class="headerlink" title="Speedtest"></a>Speedtest</h3><p>成功运行后，在文件目录，我的是/root/nginx/webroot，添加Speedtest的网站文件。并将example-singleServer-full.html重命名为默认文件index.html。然后就可以直接访问对应的网址测速了，我的是<a class="link"   href="http://192.168.2.110:8088/speedtest/" >192.168.2.110:8088/speedtest/<i class="fas fa-external-link-alt"></i></a>。</p><ul><li><a class="link"   href="https://github.com/librespeed/speedtest" >Speedtest<i class="fas fa-external-link-alt"></i></a></li></ul><p>当当当当，最终的测速效果如下</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://pic.imgdb.cn/item/62481dc027f86abb2ad1b2ef.png"                                     ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Openwrt中有使用docker的需求，顺道学习一下docker的配置。&lt;/p&gt;
&lt;h2 id=&quot;空间挂载&quot;&gt;&lt;a href=&quot;#空间挂载&quot; class=&quot;headerlink&quot; title=&quot;空间挂载&quot;&gt;&lt;/a&gt;空间挂载&lt;/h2&gt;&lt;p&gt;openwrt默认是/opt和/o</summary>
      
    
    
    
    <category term="极客" scheme="https://blog.liulp.club/categories/%E6%9E%81%E5%AE%A2/"/>
    
    <category term="服务器" scheme="https://blog.liulp.club/categories/%E6%9E%81%E5%AE%A2/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="Openwrt" scheme="https://blog.liulp.club/tags/Openwrt/"/>
    
    <category term="docker" scheme="https://blog.liulp.club/tags/docker/"/>
    
    <category term="homeassistant" scheme="https://blog.liulp.club/tags/homeassistant/"/>
    
  </entry>
  
</feed>
